<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.order_service.mappers.OrderMapper">

    <insert id="createOrder"
            parameterType="com.example.order_service.models.Order"
            useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO orders (
            user_id,
            full_name,
            email,
            phone,
            address,
            status,
            total_money
         
        ) VALUES (
            #{userId},
            #{fullName},
            #{email},
            #{phone},
            #{address},
            #{status},
            #{totalMoney}
        
        )
    </insert>

    <select id="getOrderById"
            parameterType="int"
            resultType="com.example.order_service.models.Order">

        SELECT
        id
        ,user_id AS userId
        ,order_date AS orderDate
        ,status
        ,total_money AS totalMoney

        FROM orders 

        WHERE id = #{id}
    </select>

    <select id="getOrderByUserId"
            parameterType="int"
            resultType="com.example.order_service.dtos.response.OrderResponse">

        SELECT
        id
        ,user_id AS userId
        ,full_name AS fullName
        ,email
        ,phone
        ,address
        ,order_date AS orderDate
        ,status
        ,total_money AS totalMoney

        FROM orders 

        WHERE user_id = #{userId}

    </select>

    <select id="statisOrder"
            resultType="com.example.order_service.dtos.response.CntOrderResponse">

        SELECT

        COUNT(*) AS totalOrder
        , COUNT(*) FILTER (WHERE status = 'PENDING')     AS statusPending
        , COUNT(*) FILTER (WHERE status = 'DELIVERING')  AS statusDelivering
        , COUNT(*) FILTER (WHERE status = 'COMPLETED')   AS statusCompleted
        , COALESCE(SUM(total_money), 0) AS totalMoney

        FROM orders

        WHERE user_id = #{userId}
    
    </select>

    <delete id="deleteUser" parameterType="int">
        DELETE FROM orders 
        
        WHERE user_id = #{userId}
    </delete>

    <delete id="deleteOrder" parameterType="int">
        DELETE FROM orders

        WHERE
        id = #{id}
    </delete>

    <update id="decreaseTotalMoney" >
        UPDATE orders

        SET 
        total_money = total_money - #{totalMoney} 

        WHERE 
        id = #{orderId}
    </update>

    <update id="increaseTotalMoney" >
        UPDATE orders

        SET 
        total_money = total_money + #{totalMoney} 

        WHERE 
        id = #{orderId}

    </update>

    <update id="updateOrder" parameterType="com.example.order_service.models.Order" >
        UPDATE 
        orders

        SET
        user_id = #{userId}
        ,full_name = #{fullName}
        ,email = #{email}
        ,phone = #{phone}
        ,address = #{address}
        ,total_money = #{totalMoney}

        WHERE 
        id = #{id}
    </update>

    <update id="updateStatus">
        UPDATE 
        orders

        SET status = #{status}
        
        WHERE id = #{id}
    </update>

</mapper>
