<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.orderdetail_service.mappers.OrderDetailMapper">
  <resultMap id="BaseResultMap" type="com.example.orderdetail_service.models.OrderDetail">

    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="number_of_products" jdbcType="INTEGER" property="numberOfProducts" />
    <result column="total_money" jdbcType="DOUBLE" property="totalMoney" />
    <result column="color" jdbcType="VARCHAR" property="color" />
  </resultMap>
  <insert id="insert" parameterType="com.example.orderdetail_service.models.OrderDetail" useGeneratedKeys="true" keyProperty="id">
    insert into order_details 
    (
      order_id
    , product_id
    , price
    , total_money
    , number_of_products
    , color
      )
    values (#{orderId,jdbcType=INTEGER}
    , #{productId,jdbcType=INTEGER}
    , #{price}
    , #{totalMoney}
    , #{numberOfProducts,jdbcType=INTEGER}
    , #{color,jdbcType=VARCHAR}
    )
  </insert>

  <select id="getById" resultType="com.example.orderdetail_service.dtos.response.OrderDetailResponse">

    SELECT
    id,
    order_id AS orderId,
    product_id AS productId,
    price,
    number_of_products AS numberOfProducts,
    total_money AS totalMoney,
    color

    FROM order_details

    WHERE 
    id = #{id,jdbcType=INTEGER}
  </select>

  <update id="updateById" parameterType="com.example.orderdetail_service.models.OrderDetail">
    UPDATE 
    order_details

    SET 
      order_id = #{orderId,jdbcType=INTEGER},
      product_id = #{productId,jdbcType=INTEGER},
      price = #{price,jdbcType=DOUBLE},
      number_of_products = #{numberOfProducts,jdbcType=INTEGER},
      total_money = #{totalMoney,jdbcType=DOUBLE},
      color = #{color,jdbcType=VARCHAR}

    WHERE 
    id = #{id,jdbcType=INTEGER}
  </update>

  <delete id="deleteById" parameterType="java.lang.Integer">
    DELETE FROM order_details
    
    WHERE 
    id = #{id,jdbcType=INTEGER}
  </delete>

  <delete id="deleteByOrder">
    DELETE FROM order_details
    
    WHERE 
    order_id = #{orderId,jdbcType=INTEGER}
  </delete>

  <select id="getTopProduct" resultType="com.example.orderdetail_service.dtos.response.TopProductStatResponse">
    SELECT 
    product_id AS productId
    , SUM(number_of_products) AS totalSold

    FROM
    order_details

    GROUP BY product_id

    ORDER BY totalSold DESC 

    LIMIT 10
  </select>

  <select id="findDetailResponses" resultType="com.example.orderdetail_service.dtos.response.OrderDetailResponse" >
     SELECT 
        id,
        order_id AS orderId,
        product_id AS productId,
        number_of_products AS numberOfProducts,
        total_money AS totalMoney,
        color,
        price
        
    FROM order_details 
    
    WHERE order_id = #{orderId}
  </select>


  <insert id="insertSelective" parameterType="com.example.orderdetail_service.models.OrderDetail">
    
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      PostgreSQL
    </selectKey>
    insert into order_details
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="numberOfProducts != null">
        number_of_products,
      </if>
      <if test="totalMoney != null">
        total_money,
      </if>
      <if test="color != null">
        color,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="numberOfProducts != null">
        #{numberOfProducts,jdbcType=INTEGER},
      </if>
      <if test="totalMoney != null">
        #{totalMoney,jdbcType=DOUBLE},
      </if>
      <if test="color != null">
        #{color,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
</mapper>